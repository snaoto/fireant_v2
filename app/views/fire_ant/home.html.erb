<!DOCTYPE html>
<html>
    <!-- Define Style =============-->
    <head>
        <meta charset="UTF-8">
          <LINK rel="stylesheet" href="main.css" type="text/css">
        <style>
            #map {
                height: 400px;
                width: 80%;
            }

        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
        </style>



        <!-- Add Title on the Browser Tab =============-->
        <title>FireAntEradicator</title>

        <!-- Prepare Functions for Watch Positions, Variables =============-->
        <script type="text/javascript">
            var WatchID;            // Object of "watchPosition"
            var WatchLoopCnt = 0;   // Counter to stop watching
            var WatchLoopMax = 0;  // No. of counting to stop watching
            var MapTime;            // Time when map was last updated
            var MapUpTime = 300000;      // Temporal interval to update the map

            var markerParams = {};
            //=========================================================
            // Operate when succeeding in getting position
            //=========================================================
            function WatOk(argPos){

                // --- Output the retrieved values ------------------------------------------------------------------------
                document.getElementById("watLatitude").innerHTML         = argPos.coords.latitude;          // 緯度
                document.getElementById("watLongitude").innerHTML        = argPos.coords.longitude;         // 経度
                document.getElementById("watAccuracy").innerHTML         = argPos.coords.accuracy;          // 緯度・経度の誤差
                document.getElementById("watAltitude").innerHTML         = argPos.coords.altitude;          // 高度
                document.getElementById("watAltitudeAccuracy").innerHTML = argPos.coords.altitudeAccuracy;  // 高度の誤差
                document.getElementById("watHeading").innerHTML          = argPos.coords.heading;           // 方角(0:北)
                document.getElementById("watSpeed").innerHTML            = argPos.coords.speed;             // 速度
                document.getElementById("watDate").innerHTML             = (new Date()).toString();         // 取得時間

                // --- Control for displaying results -------------------------------------------------------------------
                WatDisplayCtrl('OK');

                // console.log(argPos.coords.latitude);
                // console.log(argPos.coords.longitude);
                // console.log("");

                markerParams = {latitude:argPos.coords.latitude , longitude:argPos.coords.longitude}
                //markerParams['title'] = 'testetsttest';
                // $.ajax({
                //   url: '/users',
                //   type: 'POST',
                //   dataType: 'json',
                //   data: {user:{latitude:argPos.coords.latitude , longitude:argPos.coords.longitude}}
                // })

                // --- Display on Google map ----------------------------------------------------------
                MapUpdate(argPos.coords.latitude, argPos.coords.longitude, '');

                // --- Stop watching at a limit -----------------------------------------------------
                // WatchLoopCnt++;
                // if(WatchLoopCnt> WatchLoopMax){
                //     navigator.geolocation.clearWatch(WatchID);
                //     document.getElementById("watDate").innerHTML += '<br><span style="color:blue">位置の追跡を停止しました。</span>';
                // }
            }
//            console.log(argPos.coords.latitude);
//            console.log(argPos.coords.longitude);

            function CreateMarker(argPos){
              markerParams['description'] = $("#description").val();
　　　　　　　　　
              $.ajax({
                url: '/users',
                type: 'POST',
                dataType: 'json',
                data: {user:markerParams}


              })
              // document.getElementById("description").style.visibility = "hidden";
              // document.getElementById("description2").style.visibility = "hidden";
              alert("送信が完了しました.　他の地点を登録する場合は赤いマーカーを動かして再度送信ボタンを押してください.");
            }

        //=========================================================
        // Operate when failing in getting position
        //=========================================================
        function WatErr(argErr){
            var wErrMsg = "";
            switch(argErr.code){
                case 1 : wErrMsg = "位置情報の利用が許可されていません";break;
                case 2 : wErrMsg = "デバイスの位置が判定できません";break;
                case 3 : wErrMsg = "タイムアウトしました";break;
            }
            if(wErrMsg == ""){wErrMsg = argErr.message;}

            // --- Output error message --------------------------------------------------------------------
            document.getElementById("watErrMsg").innerHTML = wErrMsg;

            // --- Control for displaying results -------------------------------------------------------------
            WatDisplayCtrl('ERR');
        }

        //=========================================================
        // Get position
        //=========================================================
        function PosWatch(){

            WatchLoopCnt=0;

            // --- Responce when pushed the button multiple times ---------------------------------------------
            if(typeof WatchID === 'number'){
                navigator.geolocation.clearWatch(WatchID);
            }

            // --- Check if the browser allows getting positions ----------------------------------------------
            if (typeof navigator.geolocation === 'undefined') {
                document.getElementById("watErrMsg").innerHTML = 'ブラウザが位置情報取得に対応していません';
                WatDisplayCtrl('ERR');
                return false;
            }

            // --- Optional settings --------------------------------------------------------------------------
            var wOptions = {
                "enableHighAccuracy": true,         // true : 高精度
                "timeout": 2000,                   // タイムアウト : ミリ秒
                "maximumAge": 0,                    // データをキャッシュ時間 : ミリ秒
            };

            // --- Get position data --------------------------------------------------------------------------------
            WatchID = navigator.geolocation.watchPosition(WatOk,    // Function operated when succeeding in getting location
                                                              WatErr,   // Function operated when failing in getting location
                                                              wOptions );   // Optional setting

                                                              // --- Control for displaying results -----------------------
                                                              WatDisplayCtrl('START');
                                                              return true;
        }

        //=========================================================
        // Control for displaying results
        //=========================================================
        function WatDisplayCtrl(argMsg){
            return false;
            // --- Control for displaying results ----------------------------------------------------------------------------
            //document.getElementById("watOut-area").style.display     = '';
            switch(argMsg){
                case 'OK' :
                document.getElementById("watShorichu").style.display     = 'none';
                document.getElementById("watOut-err-area").style.display = 'none';
                document.getElementById("watOut-ok-area").style.display  = '';
                break;
                case 'ERR' :
                document.getElementById("watShorichu").style.display     = 'none';
                document.getElementById("watOut-err-area").style.display = '';
                document.getElementById("watOut-ok-area").style.display  = 'none';
                break;
                default :
                document.getElementById("watShorichu").style.display     = '';
                document.getElementById("watOut-err-area").style.display = 'none';
                document.getElementById("watOut-ok-area").style.display  = 'none'
                break;
            }

            // --- Scroll to the result (position) ----------------------------------------------------------
           // if(WatchLoopCnt == 0){
             //   LinkScroll('watOut-area');
           // }
        }

        //=========================================================
        // Updating google map
        //=========================================================
        function MapUpdate(argLatitude , argLongitude , argFlg){
            console.log(argLatitude, argLatitude, argFlg);

            // --- Check the frequency of updating the map ------------------------------------------------------------------
            if((typeof MapTime) === 'object'){

                var wNowTime = new Date();
                if((argFlg != '1')&&(((wNowTime - MapTime) / 1000) < MapUpTime)){
                    return false;
                }
            }
            MapTime = new Date();

            // --- 緯度・経度の編集 ------------------------------------------------------------------------
            var wCenterPos = new google.maps.LatLng(argLatitude , argLongitude);

            // --- オプション編集 --------------------------------------------------------------------------
            // var wOptions = {
            //     zoom: 16,                                 // ズーム率
            //     center: wCenterPos,                       // 地図中央の座標
            //     //mapTypeId: google.maps.MapTypeId.ROADMAP  // 通常の地図
            // };

            // --- GoogleMapを表示 -------------------------------------------------------------------------
            //var wGoogleMap = new google.maps.Map(document.getElementById('map'), wOptions);
            //map = new google.maps.Map(document.getElementById('map'), wOptions);


            // --- 座標にマーカーを付ける ------------------------------------------------------------------
            document.getElementById('latitude').value = null
            document.getElementById('longitude').value = null
            var wMarker = new google.maps.Marker({
              position: wCenterPos,
              map: map,
              title: "あなたの現在地",
              draggable: true
              });
            map.panTo(wCenterPos);
            map.setZoom(15);

            // マーカーのドロップ（ドラッグ終了）時のイベント
            google.maps.event.addListener( wMarker, 'dragend', function(ev){
              // イベントの引数evの、プロパティ.latLngが緯度経度。
              document.getElementById('latitude').value = ev.latLng.lat();
              document.getElementById('longitude').value = ev.latLng.lng();
              markerParams = {latitude:ev.latLng.lat() , longitude:ev.latLng.lng()}
              });
            document.getElementById("goFetchPos").style.visibility = "hidden";

        }
        // ONLOADイベントにセット
        window.onload = init();

      </script>

    </head>

    <!-- Define Body (background color) =============-->
    <body bgcolor="white">
    <div id="watErrMsg"></div>

        <!-- 本文スタート =============-->

<p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>
　<p><br><h3><strong>ヒアリを発見しましたか！？</h3></strong></p>
　　<h4>ヒアリマップでは、ヒアリ発見情報を報告できるシステムです。</h4>
   <p><br><strong><h2>　　　4つの手順で報告が完了します！</h2></strong></p>
    <p>&nbsp;</p> <div id="color2">
     <ol><li>1."位置情報を取得する"ボタンを押す</li></ol>
    <ol><li>2.地図上のマーカーをドラッグして場所を訂正する</li></ol>
    <ol><li>3.周辺環境やアリの数を教えてください</li></ol>
    <ol><li>4.送信ボタンをおす</li></ol> </div>

      <p>&nbsp;</p> <div id="goFetchPos">
       <button type="button" class="button" onclick="PosWatch()">1.位置情報を取得する</button>
     </div>
    <p>&nbsp;</p><div id="color2">
     <ol><li>2.地図上のマーカーをドラッグして場所を訂正する</li></ol></div>

        <!-- Show Map =============-->

           <p>&nbsp;</p><form>
                <div id="map"></div>
                <script>
                    var map;
                    function initMap() {
                        // The first point shown
                        var center = {lat: 36, lng: 134};
                        var infoWindow;
                        var data = [
                          <% @users.each do |user| %>
                          <%= "{ lat:#{user.latitude}, lng:#{user.longitude}}," %>
                          <% end %>
                        ]

                        map = new google.maps.Map(document.getElementById('map'), {
                          zoom: 6,
                          center: center
                        });

                        // Create a <script> tag and set the USGS URL as the source.
//                        var script = document.createElement('script');
                          // This example uses a file on ujilab.org
//                        script.src = 'https://ujilab.org/wp/wp-content/uploads/2017/12/pointdata_test20171201-3.js';
//                        document.getElementsByTagName('head')[0].appendChild(script);

                        marker = []
                        for (var i = 0; i < data.length; i++) {
                          markerLatLng = {lat: data[i]['lat'], lng: data[i]['lng']};
                          marker[i] = new google.maps.Marker({
                            position: markerLatLng,
                            map: map
                            });
                            }
                    }

                /* show red points according to the database.*/
                // window.fafeed_callback = function(results) {
                //     for (var i = 0; i < results.features.length; i++) {
                //         var coords = results.features[i].geometry.coordinates;
                //         var latLng = new google.maps.LatLng(coords[1],coords[0]);
                //         var marker = new google.maps.Marker({
                //                                             position: latLng,
                //                                             map: map
                //                                             });
                //     }
                // }

                </script>

                <script async defer
                    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCHvTJh0c0yKakfJi0Ju2zPklH6Plv37P8&callback=initMap">
                    </script>

            <!--div class="PosWatButton">
                <div id="goFetchPos">
                    <input value="現在地特定" onclick="PosWatch();" type="button">
                  </div-->


            <!-- Show Input Buttons =============-->
            <div id="color3">
             <ol><li>3.周辺環境やアリの数を教えてください</li></ol>
            <input type="text" class="hoge" id="description"></input>

          <p>&nbsp;</p>
          <div id="color3">
          <ol><li>4.送信ボタンを押してください</li></ol>
          <center><input id="description2" onclick="CreateMarker();" type="button" name="ok" value="送信"
              style="style= width: 40%; padding:20px;font-size:20px;;border:2px ;background:#1fa67a;color:white;">
          </form></center>


         <br><h4>ヒアリの説明ページへ移動します。</h4>
          <div id="goFetchPos">
         <button type="button" class="button"
         onclick="window.open('https://sites.google.com/site/iussijapan/fireant','_blank');">
          ヒアリについて知りたい</button> </div>

</center>

<marquee direction="right" width = "1000">
<%= image_tag 'ant.png'%> </marquee>

  <center>

            <div id="watOut-area">
                <div id="watOut-err-area">
                    </div>
                <div id="watShorichu">
                    </div>
                <div style="max-width:600px;margin:10px auto" id="watOut-ok-area">
                    <table class="tmTable" style="width:100%;margin-bottom:10px;">
                        <tbody>
                            <tr style="display:none;"><th colspan="2">情報</th><th>取得値</th><th>単位</th></tr>
                            <tr style="display:none;"><th rowspan="3">位置</th><td>緯度</td><td class="kekkaB" id="watLatitude"></td><td>度</td></tr>
                            <tr style="display:none;"><td>経度</td><td class="kekkaB" id="watLongitude"></td><td>度</td></tr>
                            <tr style="display:none;"><td>誤差</td><td class="kekkaB" id="watAccuracy"></td><td>m</td></tr>
                            <tr style="display:none;"><th rowspan="2">高さ</th><td>高度</td><td class="kekkaB" id="watAltitude"></td><td>m</td></tr>
                            <tr style="display:none;"><td>誤差</td><td class="kekkaB" id="watAltitudeAccuracy"></td><td>m</td></tr>
                            <tr style="display:none;"><th>向き</th><td>方角</td><td class="kekkaB" id="watHeading"></td><td>度</td></tr>
                            <tr style="display:none;"><th>移動</th><td>速度</td><td class="kekkaB" id="watSpeed"></td><td>m/s</td></tr>
                            <tr><td colspan="4" style="text-align:center" id="watDate"></td></tr>
                            <tr><td colspan="4" style="text-align:center"><div style="width:100%; height:320px;" id="watMap"></div></td></tr>
                        </tbody>
                    </table>

  </center>
            <!-- Show Comment Form =============-->


                 <!-- <label for="latitude">緯度</label> -->
                 <input style="display:none;" type="text" id="latitude" size="20" />
                 <!-- <label for="longitude">経度</label> -->
                 <input style="display:none;" type="text" id="longitude" size="20" />



    </body>
</html>
